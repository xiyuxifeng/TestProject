name: iOS Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Export
        uses: yukiarrr/ios-build-action@v1.5.0
        with:
          project-path: MainApp.xcodeproj
          scheme: MainApp
          p12-base64: ${{ secrets.P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
          team-id: ${{ secrets.TEAM_ID }}
          export-method: development
          configuration: Debug
          output-path: output/MainApp.ipa
      - name: lsIpa
        run: |
          cd output; ls
          
#       - name: build
#         uses: mxcl/xcodebuild@v1
#         with:
#           # A semantic version range, eg. ^10, ~10.3 or 10.3.1
#           # Leave unset for the imageâ€‘default.
#           xcode: 14.0
          
#           # A semantic version range, eg. ^5, ~5.4 or 5.4.1
#           swift: 5.5
          
#           # Either `iOS`, `tvOS`, `macOS`, `watchOS` or (more rarely)  `mac-catalyst`
#           # Leave unset and `xcodebuild` decides itself.
#           platform: iOS
          
#           # The most common actions are `test`, `build`.
#           # See the `xcodebuild` manual for available actions.
#           # Specifying `none` skips the explicit `xcodebuild` step allowing you
#           # to use this (GitHub) Action solely for selecting an Xcode version.
#           # Specifying `''`, `null` or `~` will cause xcodebuild to behave as it
#           # does without an action specified (usually `build`)
#           action: test         
          
#           # Enables code coverage
#           code-coverage: false
          
#           # A Base64-encoded authentication key issued by App Store Connect. If
#           # specified, `xcodebuild`` will authenticate with the Apple Developer
#           # website using this credential. The `authentication-key-id` and
#           # `authentication-key-issuer-id` parameters are required. Using this key,
#           # `xcodebuild` will register the GitHub Actions runner device and manage
#           # code signing certificates for it. Please note that this may cause
#           # undesired behavior when using GitHub-hosted runners. For best results, use
#           # App Store Connect API keys only on self-hosted runners.
#           authentication-key-base64: ""
          
#           # The key identifier associated with the App Store Conect authentication key
#           # specified in `authentication-key-base64`. This string can be located in
#           # the users and access details for your provider at
#           # "https://appstoreconnect.apple.com". For best results, use App Store
#           # Connect API keys only on self-hosted runners.
#           authentication-key-id: ""
          
#           # The App Store Connect issuer identifier associated with the authentication
#           # key specified in `authentication-key-base64`. This string can be located
#           # in the users and access details for your provider at
#           # "https://appstoreconnect.apple.com". For best results, use App Store
#           # Connect API keys only on self-hosted runners.
#           authentication-key-issuer-id: ""
          
#           # A Base64-encoded certificate to be installed to the macOS Keychain for
#           # code signing. It is removed from the keychain in the post action. This
#           # certificate should correspond to the `CODE_SIGN_IDENTITY` specified in
#           # your project or to the `code-sign-identity` input. Pass this in as a
#           # GitHub Encrypted Secret. Requires macOS and
#           # `code-sign-certificate-passphrase`.
#           code-sign-certificate: ""
              
#           # The passphrase used to protect the code signing certificate. Pass this in
#           # as a GitHub Encrypted Secret.
#           code-sign-certificate-passphrase: ""
          
#           # Identity to be used for code signing. If your project specifies a
#           # `CODE_SIGN_IDENTITY`, this will override it.
#           code-sign-identity: ""
          
#           # A multiline list of Base64-encoded mobile provisioning profiles.
#           mobile-provisioning-profiles-base64: ""
          
#           # A multiline list of Base64-encoded Mac provisioning profiles.
#           provisioning-profiles-base64: ""
          
#           # working-directory
#           working-directory: ""
          
#           # Typically `Release` or `Debug`.
#           # Leave unset and `xcodebuild` decides itself.
#           configuration: Debug
          
#           # A scheme defined by an Xcode project or workspace.
#           # If not specified, xcodebuild builds only the first target.
#           scheme: MainApp
              
#           # We try to detect your workspace, but if we fail you can manually specify
#           # it with this parameter.
#           workspace: ""
          
#           # Fails the build if any warnings in *non test targets*.
#           warnings-as-errors: false
          
#           # One of `xcpretty`, `quiet` or `verbose`.
#           verbosity: xcpretty
               
#           # One of `always` or `on-failure`.
#           # Consider `always` if you want access to your coverage-reports.
#           # Beware that artifacts count against your GitHub Actions storage limits.
#           upload-logs: on-failure              
